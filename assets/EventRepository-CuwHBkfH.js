const m=new Date().getFullYear(),c={TIMEZONE:"Europe/Vienna",CURRENT_SEASON:new Date().getMonth()>2?m:m-1,SEASONS:[2025,2024,2023,2022,2021],API_BASE:"https://api.hardbulls.com/",BULLS_LEAGUES:["bbl"],ASSET_JSON_CACHE_TTL:60*60,ASSET_IMAGE_CACHE_TTL:60*60*24,SPLASH_TIMEOUT:1800},E="state",f={theme:"auto",language:"auto",showPastGames:!1,showPastEvents:!1,leagues:[],season:c.CURRENT_SEASON};class n{static state={...f};static setTheme(e){localStorage.setItem("theme",e),n.state.theme=e}static getTheme(){return n.state.theme}static setLanguage(e){localStorage.setItem("language",e),n.state.language=e}static getLanguage(){return n.state.language}static setShowPastGames(e){localStorage.setItem("showPastGames",JSON.stringify(e)),n.state.showPastGames=e}static getShowPastGames(){return n.state.showPastGames}static setShowPastEvents(e){localStorage.setItem("showPastEvents",JSON.stringify(e)),n.state.showPastEvents=e}static getShowPastEvents(){return n.state.showPastEvents}static setSeason(e){localStorage.setItem("season",e.toString()),n.state.season=e}static getSeason(){return n.state.season}static setLeagues(e){localStorage.setItem("leagues",JSON.stringify(e)),n.state.leagues=e,this.notifyServiceWorker()}static addLeague(e){const t=n.getLeagues();t.includes(e)||(t.push(e),n.setLeagues(t))}static removeLeague(e){n.setLeagues(n.getLeagues().filter(t=>t!==e))}static getLeagues(){return n.state.leagues}static getStateString(){return JSON.stringify(this.state)}static notifyServiceWorker(){typeof window>"u"||typeof document>"u"||navigator.serviceWorker?.controller&&navigator.serviceWorker.controller.postMessage({type:E,state:this.state})}static load(){const e=localStorage.getItem("leagues");n.state={theme:localStorage.getItem("theme")||"auto",language:localStorage.getItem("language")||"auto",showPastGames:localStorage.getItem("showPastGames")==="true",showPastEvents:localStorage.getItem("showPastEvents")==="true",leagues:e?JSON.parse(e):[],season:Number.parseInt(localStorage.getItem("season")||`${f.season}`)},n.notifyServiceWorker()}}const S="en",o={"app.title":{en:"Bulls App",de:" Bulls App"},"app.offline":{en:"You are offline, and data may be outdated.",de:"Du bist offline, Daten sind eventuell nicht aktuell."},"app.installation.apple":{de:"Installiere die App, indem du auf die <em>Teilen-Schaltfläche</em> ({shareIcon}) tippst und dann <em>Zum Home-Bildschirm</em> auswählst.",en:"Install the app by tapping the <em>Share button</em> ({shareIcon}) and then selecting <em>Add to Home Screen</em>."},"app.games":{en:"Schedule",de:"Spielplan"},"app.games.tab-bulls":{en:"Bulls",de:"Bulls"},"app.games.tab-teams":{en:"My Teams",de:"Meine Teams"},"app.games.select-user-teams":{en:"You have not selected any teams of interest yet. You can select them in the settings.",de:"Du hast noch keine Teams ausgewählt, die dich interessieren. Du kannst sie in den Einstellungen auswählen."},"app.settings.my-teams":{en:"My Teams",de:"Meine Teams"},"app.settings.games":{en:"Games and Events",de:"Spiele und Veranstaltungen"},"app.events.no-events":{en:"No events are scheduled at the moment",de:"Derzeit sind keine Veranstaltungen geplant"},"app.settings.title":{en:"Settings",de:"Einstellungen"},"app.settings.showPastGames":{en:"Show past games",de:"Vergangene Spiele anzeigen"},"app.settings.showPastEvents":{en:"Show past event",de:"Vergangene Veranstaltungen anzeigen"},"app.settings.display":{en:"Display",de:"Anzeige"},"app.settings.theme":{en:"Theme",de:"Thema"},"app.settings.theme.auto":{en:"Auto",de:"Automatisch"},"app.settings.theme.dark":{en:"Dark",de:"Dunkel"},"app.settings.theme.light":{en:"Light",de:"Hell"},"app.settings.language":{en:"Language",de:"Sprache"},"app.settings.language.auto":{en:"Auto",de:"Automatisch"},"app.settings.language.de":{en:"German",de:"Deutsch"},"app.settings.language.en":{en:"English",de:"Englisch"},"app.settings.reload":{en:"Reload App?",de:"App neu laden?"},"app.games.no-games-user.current":{en:"No games scheduled for your teams at the moment",de:"Derzeit sind keine Spiele für deine Teams geplant"},"app.games.no-games-user.past":{en:"No games found for your teams for the {season} season.",de:"Für die Saison {season} wurden keine Spiele für deine Teams gefunden."},"app.settings.version":{en:"App Version",de:"App Version"},"app.settings.no-teams-past-season":{en:"There are no teams available for the {season} season.",de:"Für die Saison {season} sind keine Teams verfügbar."},"app.settings.change-season":{en:"Are you sure you want to change the selected season?",de:"Bist du sicher, dass du die ausgewählte Saison ändern möchtest?"},"app.settings.no-teams-current-season":{en:"There are currently no teams available for the current season.",de:"Derzeit sind keine Teams für die aktuelle Saison verfügbar."},"app.games.no-games-bulls.current":{en:"No Bulls games are scheduled at the moment.",de:"Derzeit sind keine Bulls-Spiele geplant."},"app.games.no-games-bulls.past":{en:"No Bulls games are found for the {season} season.",de:"Für die Saison {season} wurden keine Bulls-Spiele gefunden."},"app.settings.about":{en:"About This App",de:"Über diese App"},"app.settings.update":{en:"Update Available",de:"Update verfügbar"},"app.settings.selectSeason":{en:"Select Season ",de:"Saison auswählen"},"app.settings.legal":{en:"This app works offline and does not store any personal data on remote servers. All data is processed and stored only on your device. The app may use external services to retrieve publicly available information, but no personal data is shared or transmitted.",de:"Diese App funktioniert offline und speichert keine persönlichen Daten auf entfernten Servern. Alle Daten werden ausschließlich auf Ihrem Gerät verarbeitet und gespeichert. Die App kann externe Dienste nutzen, um öffentlich verfügbare Informationen abzurufen, aber keine persönlichen Daten werden geteilt oder übertragen."},"app.settings.outdated":{en:"The information provided by this app may be subject to change and could be outdated. While we strive to keep it accurate, we cannot guarantee that all data is always up to date.",de:"Die Informationen, die diese App bereitstellt, können sich ändern und möglicherweise veraltet sein. Obwohl wir uns bemühen, sie stets aktuell zu halten, können wir nicht garantieren, dass alle Daten immer auf dem neuesten Stand sind."},"app.game.status.canceled":{en:"Canceled",de:"Abgesagt"}};function w(){return n.getLanguage()==="auto"?navigator.languages!=null?navigator.languages[0].split("-")?.[0]:navigator.language.split("-")?.[0]:n.getLanguage()}const b="en";function k(s,e,t){e=w()||b;let a=s;if(o[s]&&o[s][e]?a=o[s][e]:o[s]&&o[s][S]&&(a=o[s][S]),t)for(const[i,l]of Object.entries(t))a=a.replace(i,l.toString());return a}function A(s){return s<new Date}const _={},g=async(s,e)=>{let t=_[s];if(!t)try{t=await(await fetch(`${c.API_BASE}${s}`.replace(/([^:])(\/\/+)/g,"$1/"))).json(),_[s]=t}catch(a){if(a instanceof Error&&T(a)&&e)return e();throw a}return t};function T(s){return s.name==="TypeError"&&s.message.includes("Failed to fetch")&&!window.navigator.onLine}class y{static async findAll(){return(await g("/api/leagues.json",()=>[])).map(t=>({id:t.slug,name:t.name,shortName:t.shortName,year:t.year}))}static async findByYear(e){return(await this.findAll()).filter(t=>t.year===e)}static async findByIdAndSeason(e,t){return(await this.findAll()).find(a=>a.id===e&&a.year===t)}}class u{static TEAM_MAPPING={"Hard Bulls":"hb_1","Hard Bulls Bandidos":"hb_2","Hard Bulls Bullets":"hb_3","Hard Barons":"hb_4_sp","Hard Bulls Bandidas":"hb_5_fp","Hard Bulls Bandidas U13":"hb_5_fp","Hard Bulls U8":"hb_1","Hard Bulls U10":"hb_1","Hard Bulls U12":"hb_1","Hard Bulls U13":"hb_1","Hard Bulls U14":"hb_1","Hard Bulls U15":"hb_1","Hard Bulls U16":"hb_1","Feldkirch Cardinals":"fc_1","Feldkirch Cardinals U8":"fc_1","Feldkirch Cardinals U10":"fc_1","Feldkirch Cardinals U12":"fc_1","Feldkirch Cardinals U14":"fc_1","Feldkirch Cardinals U16":"fc_1","Feldkirch Cardinals U13":"fc_1","Feldkirch Cardinals 2":"fc_1","Feldkirch Cardinals 3":"fc_1","Diving Ducks Wr. Neustadt":"dd_1","Wr. Neustadt Diving Ducks":"dd_1","Diving Ducks Wiener Neustadt":"dd_1","Diving Ducks U16 Wr. Neustadt":"dd_1","Diving Ducks U14 Wr. Neustadt":"dd_1","Vienna Wanderers":"vw_1","Vienna Wanderers 2":"vw_1","Vienna Wanderers U16":"vw_1","Vienna Wanderers U14":"vw_1","Vienna Metrostars":"vm_1","Vienna Metrostars 2":"vm_1","Vienna Metrostars U16":"vm_1","Vienna Metrostars U14":"vm_1","Schwechat Blue Bats":"bb_1","Blue Bats Schwechat":"bb_1","Schwechat Blue Bats U14":"bb_1","Traiskirchen Grasshoppers":"gh_1","Traiskirchen Grasshoppers U14":"gh_1","Dornbirn Indians":"di_1","Dornbirn Indians 2":"di_1","Dornbirn Indians 3":"di_1","Dornbirn Indians Minis U8":"di_1","Dornbirn Indians Kids U10":"di_1","Dornbirn Little Indians U12":"di_1","Dornbirn Little Indians U13":"di_1","Dornbirn Indians Ponies U14":"di_1","Dornbirn Legends":"di_2_sp","Dornbirn Redhawks":"di_3_sp","Dornbirn Bears":"di_4_sp","ASAK Athletics":"aa_1","Dirty Sox Graz":"ds_1","Kufstein Vikings":"kv_1","Kufstein Vikings U14":"kv_1","Pirmoser Vikings":"kv_1","Schwaz Tigers":"st_1","Feldkirch Angry Balls":"fc_2_sp","Centurions Wels":"cw_1","SG Indians - Vikings U16":"di_kv_1","SG Indians - Bulls":"di_hb_1","Feldkirch Falcons":"fc_2_fp","Stock City Cubs":"sc_1","Wil Pirates":"ch-wp_1","Baldham Boars":"de-bb_1","Zürich Challengers":"ch-zc_1","Pee Wees St. Pölten":"pw_1_fp","SG Crazy Chicklets - Metrostars":"cc_vw_1_fp"};static async findAll(){return(await g("/api/teams.json",()=>[])).map(t=>({id:t.id,name:t.name,nameShort:t.nameShort,logo:`${c.API_BASE}assets/teams/${t.logo}`}))}static async findByName(e){const t=await u.findAll();for(const a of t)for(const[i,l]of Object.entries(u.TEAM_MAPPING))if(i.trim().toLowerCase()===e.trim().toLowerCase()&&a.id===l)return a;throw new Error(`Team ${e} not found!`)}}class d{static FIELD_CACHE={};static async findAll(){return(await g("/api/fields.json",()=>[])).map(t=>({teams:t.teams,location:t.location,venue:t.venue,image:t.image?`${c.API_BASE}assets/fields/${t.image}`:void 0,keywords:t.keywords}))}static async findByKeyword(e){const t=d.FIELD_CACHE[e];if(t)return t;if(e.trim()===",")return;const a=(await d.findAll()).find(i=>i.keywords.includes(e))||void 0;return a&&(d.FIELD_CACHE[e]=a),a}}class B{static async findScheduledBySeasonAndLeague(e,t,a){const i=await y.findByIdAndSeason(t,e);if(!i)return[];const l=await g(`/api/seasons/${e}/${i.id}/games.json`,()=>[]),h=[];for(const r of l){const p=new Date(r.date);(a?!A(p)&&r.status==="scheduled":!0)&&h.push({home:await u.findByName(r.home),away:await u.findByName(r.away),status:r.status,homeScore:r.homeScore,awayScore:r.awayScore,venue:r.venue?await d.findByKeyword(r.venue):void 0,date:p,league:i})}return Object.values(h).sort((r,p)=>r.date.getTime()-p.date.getTime())}static async findGamesForDay(e,t,a){return(await this.findScheduledBySeasonAndLeague(t,a,!1)).filter(i=>i.date.toDateString()===e.toDateString())}}var v=(s=>(s.TIME_ONLY="TIME_ONLY",s.DATE_ONLY="DATE_ONLY",s.DATE_TIME="DATE_TIME",s.DATE_TIME_SHORT="DATE_TIME_SHORT",s))(v||{});const D={TIME_ONLY:{timeStyle:"short"},DATE_ONLY:{dateStyle:"full"},DATE_TIME:{dateStyle:"full",timeStyle:"short"},DATE_TIME_SHORT:{dateStyle:"short",timeStyle:"short"}};function L(s,e){const t=w();return new Intl.DateTimeFormat(t,D[e]).format(s)}class N{static async findAll(e){return(await g("/api/events.json",()=>[])).map(a=>({...a,logo:a.logo?`${c.API_BASE}assets/events/${a.logo}`:void 0,date:new Date(a.date)})).filter(a=>e?!A(a.date):!0).sort((a,i)=>a.date.getTime()-i.date.getTime())}}export{c as C,v as D,N as E,d as F,B as G,y as L,n as S,u as T,E as a,f as b,L as f,k as t};
